C51 COMPILER V9.56.0.0   SYS_TICK                                                          06/07/2020 12:51:14 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SYS_TICK
OBJECT MODULE PLACED IN .\Objects\sys_tick.obj
COMPILER INVOKED BY: d:\Keil_C51\C51\BIN\C51.EXE prj\sys_tick.c ROM(SMALL) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND P
                    -RINT(.\Listings\sys_tick.lst) TABS(2) OBJECT(.\Objects\sys_tick.obj)

line level    source

   1          /*****************************************************************************
   2            * @file:      sys_tick.c
   3            * @author:    louiswoo
   4            * @version:   V1.0
   5            * @date:  2020-6-6
   6            * @brief: 系统时间片模块，为整个系统提供时间片，
   7            本项目使用5.74Mhz晶振（实测），定时器t0每隔10ms产生一次中断，
   8            中断函数会对每个任务时间片计数器-1，从而驱动任务调度
   9            每秒经历100个时间片，这些时间片都可以供任务进行调度
  10            另外还提供了一个时间任务供调用
  11          *******************************************************************************/
  12          #include "config.h"
  13          #include "debug.h"
  14          #include "humidity.h"
  15          
  16          
  17          #define TICK_PER_SECOND 100     //定义每秒的时间片sys_tick数
  18          u8 sys_tick;                    //时间片计数器
  19          u8 second,minute,hour;          //时钟任务变量
  20          
  21          /****************************************************************************************
  22            * @brief: 初始化时间片定时器t0，初始化时钟任务变量 
  23            * @param: none
  24            * @retval:  none
  25          *****************************************************************************************/
  26          void sys_tick_init(void)    //10ms@6.000MHz
  27          {
  28   1        AUXR |= 0x80;   //?????1T??
  29   1        TMOD &= 0xF0;   //???????
  30   1        TMOD |= 0x01;   //???????
  31   1        TL0 = 0x74;   //??????
  32   1        TH0 = 0x20;   //??????
  33   1        TF0 = 0;    //??TF0??
  34   1        TR0 = 1;    //???0????
  35   1        
  36   1        ET0=1;
  37   1        
  38   1        sys_tick = TICK_PER_SECOND;
  39   1        second = 0;
  40   1        minute = 0;
  41   1        hour = 0;
  42   1      }
  43          
  44          /****************************************************************************************
  45            * @brief: 时间片定时器中断服务程序，每个任务计数器-1
  46            * @param: none
  47            * @retval:  none
  48          *****************************************************************************************/
  49          void sys_tick_int(void) interrupt 1
  50          {
  51   1        TR0=0;
  52   1        TL0 = 0x7a;   //??????
  53   1        TH0 = 0x20;   //??????
  54   1        TR0=1;
C51 COMPILER V9.56.0.0   SYS_TICK                                                          06/07/2020 12:51:14 PAGE 2   

  55   1      
  56   1        /*此处每个时间片终端对每个任务时间片计数器清零
  57   1        有多少个任务就需要对多少个任务时间片计数器清零*/
  58   1        if(task_humidity_timer>0)   
  59   1        {
  60   2          task_humidity_timer--;
  61   2        }
  62   1        
  63   1      
  64   1        if(sys_tick>0)
  65   1        {
  66   2          sys_tick--;
  67   2        }
  68   1        else
  69   1        {
  70   2          sys_tick=TICK_PER_SECOND;
  71   2          
  72   2          second++;
  73   2          if(second>=60)
  74   2          {
  75   3            second=0;
  76   3            minute++;
  77   3            if(minute>=60)
  78   3            {
  79   4              minute=0;
  80   4              hour++;
  81   4            }
  82   3          }
  83   2        }
  84   1      }
  85          /****************************************************************************************
  86            * @brief: 时钟任务，每隔1s打印时间
  87            * @param: none
  88            * @retval:  none
  89          *****************************************************************************************/
  90          void task0_Clock(void)
  91          {
  92   1        if(sys_tick == 0)
  93   1        {
  94   2          debug("时间：");
  95   2          debug_var((u16)hour);
  96   2          debug(":");
  97   2          debug_var((u16)minute);
  98   2          debug(":");
  99   2          debug_var((u16)second);
 100   2      //    debug("\r\n");
 101   2        }
 102   1      }
 103          //进入空闲
 104          void sys_idle(void)
 105          {
 106   1        PCON = 0x01;
 107   1      }
 108          
 109          #define DOG_FLAG_MASK     0x80
 110          #define DOG_ENABLE_MASK   0x20
 111          #define DOG_CLEAR_MASK    0x10
 112          #define DOG_IDLECOUNT_MASK 0x08
 113          #define DOG_PRESCALER_MASK      0xf8
 114          #define DOG_PRESCALER     6
 115          
 116          //看门狗配置
C51 COMPILER V9.56.0.0   SYS_TICK                                                          06/07/2020 12:51:14 PAGE 3   

 117          //使能，清看门狗，空闲计数
 118          void dog_init(void)
 119          {
 120   1        WDT_CONTR =0x00;
 121   1        WDT_CONTR = DOG_ENABLE_MASK | DOG_CLEAR_MASK | DOG_IDLECOUNT_MASK;
 122   1        WDT_CONTR |= DOG_PRESCALER;
 123   1        
 124   1      }
 125          //清看门狗
 126          void dog_clear(void)
 127          {
 128   1        WDT_CONTR |= DOG_CLEAR_MASK;
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    158    ----
   CONSTANT SIZE    =      9    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
